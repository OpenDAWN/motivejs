!function(){var Motive={version:"0.1.0"},MotiveError=function(msg){console.log(msg)},primitives={};primitives.pitch_classes=[{value:0,natural:"C",flat:null,sharp:"B#",dblflat:"Dbb",dblsharp:null,common:"C"},{value:1,natural:null,flat:"Db",sharp:"C#",dblflat:null,dblsharp:"Bx",common:"C#"},{value:2,natural:"D",flat:null,sharp:null,dblflat:"Ebb",dblsharp:"Cx",common:"D"},{value:3,natural:null,flat:"Eb",sharp:"D#",dblflat:"Fbb",dblsharp:null,common:"Eb"},{value:4,natural:"E",flat:"Fb",sharp:null,dblflat:null,dblsharp:"Dx",common:"E"},{value:5,natural:"F",flat:null,sharp:"E#",dblflat:"Gbb",dblsharp:null,common:"F"},{value:6,natural:null,flat:"Gb",sharp:"F#",dblflat:null,dblsharp:"Ex",common:"F#"},{value:7,natural:"G",flat:null,sharp:null,dblflat:"Abb",dblsharp:"Fx",common:"G"},{value:8,natural:null,flat:"Ab",sharp:"G#",dblflat:null,dblsharp:null,common:"Ab"},{value:9,natural:"A",flat:null,sharp:null,dblflat:"Bbb",dblsharp:"Gx",common:"A"},{value:10,natural:null,flat:"Bb",sharp:"A#",dblflat:"Cbb",dblsharp:null,common:"Bb"},{value:11,natural:"B",flat:"Cb",sharp:null,dblflat:null,dblsharp:"Ax",common:"B"}],primitives.steps=[{name:"C",value:60},{name:"D",value:62},{name:"E",value:64},{name:"F",value:65},{name:"G",value:67},{name:"A",value:69},{name:"B",value:71}],primitives.operators=[{name:"b",value:-1},{name:"#",value:1},{name:"bb",value:-2},{name:"x",value:2}],primitives.keys=[{fifths:0,major:"C",minor:"A"},{fifths:1,major:"G",minor:"E"},{fifths:-1,major:"F",minor:"D"},{fifths:2,major:"D",minor:"B"},{fifths:-2,major:"Bb",minor:"G"},{fifths:3,major:"A",minor:"F#"},{fifths:-3,major:"Eb",minor:"C"},{fifths:4,major:"E",minor:"C#"},{fifths:-4,major:"Ab",minor:"F"},{fifths:5,major:"B",minor:"G#"},{fifths:-5,major:"Db",minor:"Bb"},{fifths:6,major:"F#",minor:"D#"},{fifths:-6,major:"Gb",minor:"Eb"},{fifths:7,major:"C#",minor:"A#"},{fifths:-7,major:"Cb",minor:"Ab"}],primitives.simple_intervals=[{name:"m2",semitones:1,steps:1},{name:"M2",semitones:2,steps:1},{name:"m3",semitones:3,steps:2},{name:"M3",semitones:4,steps:2},{name:"P4",semitones:5,steps:3},{name:"A4",semitones:6,steps:3},{name:"d5",semitones:6,steps:4},{name:"P5",semitones:7,steps:4},{name:"m6",semitones:8,steps:5},{name:"M6",semitones:9,steps:5},{name:"m7",semitones:10,steps:6},{name:"M7",semitones:11,steps:6}],primitives.intervals=[{name:"U",semitones:0,steps:0},{name:"m2",semitones:1,steps:1},{name:"M2",semitones:2,steps:1},{name:"A2",semitones:3,steps:1},{name:"d3",semitones:2,steps:2},{name:"m3",semitones:3,steps:2},{name:"M3",semitones:4,steps:2},{name:"d4",semitones:4,steps:3},{name:"P4",semitones:5,steps:3},{name:"A4",semitones:6,steps:3},{name:"d5",semitones:6,steps:4},{name:"P5",semitones:7,steps:4},{name:"A5",semitones:8,steps:4},{name:"m6",semitones:8,steps:5},{name:"M6",semitones:9,steps:5},{name:"A6",semitones:10,steps:5},{name:"d7",semitones:9,steps:6},{name:"m7",semitones:10,steps:6},{name:"M7",semitones:11,steps:6},{name:"P8",semitones:12,steps:7},{name:"m9",semitones:13,steps:8},{name:"M9",semitones:14,steps:8},{name:"A9",semitones:15,steps:8},{name:"d11",semitones:16,steps:10},{name:"P11",semitones:17,steps:10},{name:"A11",semitones:18,steps:10},{name:"m13",semitones:20,steps:12},{name:"M13",semitones:21,steps:12},{name:"A13",semitones:22,steps:12}],primitives.scales=[{name:"major",intervals:["R","M2","M3","P4","P5","M6","M7"],pattern:[2,2,1,2,2,2,1]},{name:"minor",intervals:["R","M2","m3","P4","P5","m6","m7"],pattern:[2,1,2,2,1,2,2],source:["major","up","m3"]},{name:"major pentatonic",intervals:["R","M2","M3","P5","M6"],pattern:[2,2,3,2,3]},{name:"minor pentatonic",intervals:["R","m3","P4","P5","m7"],pattern:[3,2,2,3,2],source:["major pentatonic","up","m3"]},{name:"ionian",intervals:["R","M2","M3","P4","P5","M6","M7"],pattern:[2,2,1,2,2,2,1]},{name:"dorian",intervals:["R","M2","m3","P4","P5","M6","m7"],pattern:[2,1,2,2,2,1,2],source:["major","down","M2"]},{name:"phrygian",intervals:["R","m2","m3","P4","P5","m6","m7"],pattern:[1,2,2,2,1,2,2],source:["major","down","M3"]},{name:"lydian",intervals:["R","M2","M3","A4","P5","M6","M7"],pattern:[2,2,2,1,2,2,1],source:["major","down","P4"]},{name:"mixolydian",intervals:["R","M2","M3","P4","P5","M6","m7"],pattern:[2,2,1,2,2,1,2],source:["major","up","P4"]},{name:"aeolian",intervals:["R","M2","m3","P4","P5","m6","m7"],pattern:[2,1,2,2,1,2,2],source:["major","up","m3"]},{name:"locrian",intervals:["R","m2","m3","P4","d5","m6","m7"],pattern:[1,2,2,1,2,2,2],source:["major","up","m2"]},{name:"melodic minor",intervals:["R","M2","m3","P4","P5","M6","M7"],pattern:[2,1,2,2,2,2,1]},{name:"dorian b2",intervals:["R","m2","m3","P4","P5","M6","m7"],pattern:[1,2,2,2,2,1,2],source:["melodic minor","down","M2"]},{name:"lydian #5",intervals:["R","M2","M3","A4","A5","M6","M7"],pattern:[2,2,2,2,1,2,1],source:["melodic minor","down","m3"]},{name:"lydian dominant",intervals:["R","M2","M3","A4","P5","M6","m7"],pattern:[2,2,2,1,2,1,2],source:["melodic minor","down","P4"]},{name:"mixolydian b6",intervals:["R","M2","M3","P4","P5","m6","m7"],pattern:[2,2,1,2,1,2,2],source:["melodic minor","up","P4"]},{name:"aeolian b5",intervals:["R","M2","m3","P4","d5","m6","m7"],pattern:[2,1,2,1,2,2,2],source:["melodic minor","up","m3"]},{name:"altered",intervals:["R","m2","m3","d4","d5","m6","m7"],pattern:[1,2,1,2,2,2,2],source:["melodic minor","up","m2"]},{name:"harmonic minor",intervals:["R","M2","m3","P4","P5","m6","M7"],pattern:[2,1,2,2,1,3,1]},{name:"diminished",intervals:["R","M2","m3","P4","d5","m6","M6","M7"],pattern:[2,1,2,1,2,1,2,1]},{name:"half-whole diminished",intervals:["R","m2","m3","M3","A4","P5","M6","m7"],pattern:[1,2,1,2,1,2,1,2]},{name:"whole-half diminished",intervals:["R","M2","m3","P4","d5","m6","M6","M7"],pattern:[2,1,2,1,2,1,2,1]},{name:"whole tone",intervals:["R","M2","M3","A4","A5","m7"],pattern:[2,2,2,2,2,2]}],primitives.tetrachords=[{name:"ionian",pattern:[2,2,1]},{name:"dorian",pattern:[2,1,2]},{name:"phrygian",pattern:[1,2,2]},{name:"lydian",pattern:[2,2,2]},{name:"hungarian major",pattern:[3,1,2]},{name:"spanish phrygian",pattern:[1,2,1]},{name:"hungarian minor",pattern:[2,1,3]},{name:"harmonic",pattern:[1,3,1]}];var utilities={};utilities.transpose=function(pitch_name,direction,interval){if("U"===interval||"R"===interval)return pitch_name;if("up"!==direction&&"down"!==direction)return pitch_name;var step=pitch_name.replace(/([A-G]).*/,"$1"),input_operator=pitch_name.replace(/[A-G](.*)/,"$1"),alter=0;if(input_operator)for(var o=0;o<primitives.operators.length;o++)if(input_operator===primitives.operators[o].name){alter=primitives.operators[o].value;break}for(var step_index,input_value,s=0;s<primitives.steps.length;s++)if(step===primitives.steps[s].name){step_index=s,input_value=(primitives.steps[s].value+alter)%12;break}for(var interval_value,interval_steps,i=0;i<primitives.intervals.length;i++)if(interval===primitives.intervals[i].name){interval_value=primitives.intervals[i].semitones,interval_steps=primitives.intervals[i].steps;break}var target_step_index,target_value;switch(direction){case"up":target_step_index=(step_index+interval_steps)%7,target_value=(input_value+interval_value)%12;break;case"down":target_step_index=(7+(step_index-interval_steps))%7,target_value=(12+(input_value-interval_value))%12}if(target_value===(12+primitives.steps[target_step_index].value)%12)return primitives.steps[target_step_index].name;for(var op=0;op<primitives.operators.length;op++)if(target_value===(12+primitives.steps[target_step_index].value+primitives.operators[op].value)%12)return primitives.steps[target_step_index].name+primitives.operators[op].name},utilities.normalizeInterval=function(interval_name){var output;return interval_name.match(/13/)?output=interval_name.replace(/13/,"6"):interval_name.match(/11/)?output=interval_name.replace(/11/,"4"):interval_name.match(/9/)&&(output=interval_name.replace(/9/,"2")),output?output:interval_name},utilities.parseChordFormula=function(formula){var interval_members=["R"];return"5"===formula||formula.match(/sus/)||interval_members.push(formula.match(/m(?:[1-9]|m)/)||formula.match(/min/)||formula.match(/dim/)||"m"===formula?"m3":"M3"),formula.match(/sus2/)?interval_members.push("M2"):formula.match(/sus/)&&interval_members.push("P4"),formula.match(/(\+4|#4)/)&&interval_members.push("A4"),interval_members.push(formula.match(/(\-5|b5)/)||formula.match(/dim/)?"d5":formula.match(/(\+5|#5)/)||formula.match(/aug/)?"A5":"P5"),("6"===formula||"m6"===formula||"6/9"===formula||"m6/9"===formula)&&interval_members.push("M6"),formula.match(/dim7/)?interval_members.push("d7"):formula.match(/(m7|min7)/)?interval_members.push("m7"):formula.match(/(maj7|maj9|maj11|maj13)/)?interval_members.push("M7"):formula.match(/(7|9|11|13)/)&&"6/9"!==formula&&"m6/9"!==formula&&interval_members.push("m7"),formula.match(/(\-9|b9)/)?interval_members.push("m9"):formula.match(/(\+9|#9)/)?interval_members.push("A9"):formula.match(/(9|11|13)/)&&interval_members.push("M9"),formula.match(/(\-11|b11)/)?interval_members.push("d11"):formula.match(/(\+11|#11)/)?interval_members.push("A11"):formula.match(/(11|13)/)&&interval_members.push("P11"),formula.match(/(\-13|b13)/)?interval_members.push("m13"):formula.match(/(\+13|#13)/)?interval_members.push("A13"):formula.match(/13/)&&interval_members.push("M13"),interval_members},utilities.getNoteNamesFromIntervalArray=function(root,interval_array){try{for(var output=[],notenames=[],i=0;i<interval_array.length;i++)notenames.push("R"===interval_array[i]?root:utilities.transpose(root,"up",interval_array[i]));for(var n=0;n<notenames.length;n++)output.push(notenames[n]);return output}catch(err){MotiveError(err)}},Motive.Note=function(name){if(!name)return void MotiveError("you must specify a note name or midi number");switch(typeof name){case"string":try{var step=name.replace(/([A-G])(?:bb|x|b|#)?([0-9])?/g,"$1");if(!step)return void MotiveError("Note name must begin with a capital letter [A-G].");var operator=name.replace(/(?:[A-G])((?:bb|x|b|#)?)([0-9])?/g,"$1"),octave=parseInt(name.replace(/([A-G](?:bb|x|b|#)?)([0-9])?/g,"$2"),10);if(octave){for(var alter=0,o=0;o<primitives.operators.length;o++)if(primitives.operators[o].name===operator){alter=primitives.operators[o].value;break}this.kind="pitch",this.octave=octave,this.step=step,this.accidental=operator;for(var midi,s=0;s<primitives.steps.length;s++)primitives.steps[s].name===step&&(midi=12*octave+12+primitives.steps[s].value%12+alter);if(!midi)return void MotiveError("could not calculate midi note number, check octave value");var note_value=midi%12;this.midi=midi,this.pitch_class=primitives.pitch_classes[note_value],this.frequency=440*Math.pow(2,(midi-69)/12),this.pitch_name=step+operator,this.scientific=step+operator+octave}else{this.kind="pitch-class",this.step=step,this.accidental=operator;for(var step_value,st=0;st<primitives.steps.length;st++)primitives.steps[st].name===step&&(step_value=primitives.steps[st].value);for(var alter=0,op=0;op<primitives.operators.length;op++)if(primitives.operators[op].name===operator){alter=primitives.operators[op].value;break}var note_value=(step_value+alter)%12;this.pitch_class=primitives.pitch_classes[note_value],this.pitch_name=step+operator}}catch(err){MotiveError(err)}break;case"number":try{for(var matched_pitch_class,note_value=name%12,remains=name-note_value,octave=remains/12-1,i=0;i<primitives.pitch_classes.length;i++)if(primitives.pitch_classes[i].value===note_value){matched_pitch_class=primitives.pitch_classes[i];break}var assigned_name=matched_pitch_class.common,step=assigned_name.replace(/([A-G])(?:bb|x|b|#)?/,"$1"),operator=assigned_name.replace(/(?:[A-G])((?:bb|x|b|#)?)/,"$1");this.pitch_class=matched_pitch_class,this.scientific=assigned_name+octave,this.midi=name,this.kind="pitch",this.step=step,this.accidental=operator,this.octave=octave,this.pitch_name=assigned_name,this.frequency=440*Math.pow(2,(name-69)/12)}catch(err){MotiveError(err)}}return this},Motive.Note.prototype.transpose=function(direction,interval){switch(this.kind){case"pitch-class":var myname=this.pitch_name,mynewname=utilities.transpose(myname,direction,interval);return new Motive.Note(mynewname);case"pitch":for(var step_index,i=0;i<primitives.steps.length;i++)if(primitives.steps[i].name===this.step){step_index=i;break}for(var interval_steps,mynewname=utilities.transpose(this.pitch_name,direction,interval),i=0;i<primitives.intervals.length;i++)if(intervals[i].name===interval){interval_steps=primitives.intervals[i].steps;break}var octave_change=0;switch(direction){case"up":octave_change=step_index+interval_steps>=2*primitives.steps.length?2:step_index+interval_steps>=primitives.steps.length?1:0;break;case"down":octave_change=step_index-interval_steps<0-primitives.steps.length?-2:0>step_index-interval_steps?-1:0}var newoctave=parseInt(this.octave,10)+octave_change;return new Motive.Note(mynewname+newoctave.toString())}},Motive.Chord=function(name){name.match(/^([A-G](?:bb|x|b|#)?)(.*)/)||MotiveError("invalid root");var root=name.replace(/([A-G](?:bb|x|b|#)?)(.*)/g,"$1"),formula=name.replace(/([A-G](?:bb|x|b|#)?)(.*)/g,"$2");this.root=root,this.formula=formula;for(var interval_members=utilities.parseChordFormula(formula),scale_members=[],i=0;i<interval_members.length;i++)scale_members.push(utilities.normalizeInterval(interval_members[i]));for(var note_member_names=utilities.getNoteNamesFromIntervalArray(root,scale_members),note_members=[],n=0;n<note_member_names.length;n++)note_members.push(new Motive.Note(note_member_names[n]));return this.note_members=note_members,this.interval_members=interval_members,this.scale_members=scale_members,this.full_name=root+formula,this},Motive.Chord.prototype.transpose=function(direction,interval){var root=this.root,newroot=utilities.transpose(root,direction,interval);return new Motive.Chord(newroot+this.formula)},Motive.Scale=function(name){if(!name)return void MotiveError("no scale name specified");if("string"==typeof name){var scale_pattern=/([A-G](?:bb|x|b|#)?)\s(.*)/;if(!name.match(scale_pattern))return void MotiveError("scale name was not formatted correctly");var root=name.replace(scale_pattern,"$1"),formula=name.replace(scale_pattern,"$2");this.root=root,this.formula=formula;for(var matched,i=0;i<primitives.scales.length;i++)if(primitives.scales[i].name===formula){matched=primitives.scales[i];break}if(!matched)return void MotiveError("scale name did not match any known scales");this.matched=matched;for(var mynotes=utilities.getNoteNamesFromIntervalArray(root,matched.intervals),note_members=[],i=0;i<mynotes.length;i++)note_members.push(new Motive.Note(mynotes[i]));return this.note_members=note_members,this.interval_members=matched.intervals,this}return void MotiveError("scale name must be a string")},"function"==typeof define&&define.amd?define(Motive):"object"==typeof module&&module.exports?module.exports=Motive:this.Motive=Motive}();